classifier_name       ,classifier                                                                     ,best_params                                                                  ,ROC_AUC    ,test_ROC_AUCxgboost               ,"XGBClassifier(alpha=10, base_score=0.5, booster='gbtree', colsample_bylevel=1,              colsample_bynode=1, colsample_bytree=0.7, gamma=0.0, gpu_id=-1,              importance_type='gain', interaction_constraints=None,              learning_rate=0.1, max_delta_step=0, max_depth=8,              min_child_weight=1, missing=nan, monotone_constraints=None,              n_estimators=10, n_jobs=0, num_parallel_tree=1, random_state=0,              reg_alpha=0.005, reg_lambda=1, scale_pos_weight=1, subsample=1,              tree_method=None, validate_parameters=False, verbosity=None)","{'colsample_bytree': 0.7, 'gamma': 0.0, 'max_depth': 8, 'reg_alpha': 0.005}",0.961870203,0.403521144knn                   ,KNeighborsClassifier(n_neighbors=3)                                            ,{'n_neighbors': 3}                                                           ,0.932317405,0.373629429Logistic Regression   ,"LogisticRegression(C=1000.0, random_state=88)"                                ,"{'C': 1000.0, 'penalty': 'l2'}"                                             ,0.896736533,0.43023727Support Vector Machine,"SVC(C=1000, class_weight='balanced', gamma=0.001, probability=True,    random_state=123)"           ,"{'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}"                               ,0.885316591,0.393218027